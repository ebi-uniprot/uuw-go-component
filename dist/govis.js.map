{"version":3,"file":"govis.js","sources":["../src/main.js"],"sourcesContent":["import './govis.scss';\n\nclass GoVis extends HTMLElement {\n    constructor() {\n        super();\n        this.annotationTerms = [];\n        this.goRootNodes = ['GO:0008150', 'GO:0003674', 'GO:0005575'];\n        this.accession = '';\n    }\n\n    connectedCallback() {\n        this.loadData();\n    }\n\n    attributeChangedCallback(attrName, oldVal, newVal) {\n        if (oldVal !== null) {\n            this.innerHTML = ''; //this should be avoided\n            this.loadData();\n        }\n    }\n\n    static get observedAttributes() {\n        return ['accession', 'slimset'];\n    }\n\n    set accession(acc) {\n        if (acc) {\n            this.setAttribute('accession', acc);\n        }\n    }\n\n    get slimset() {\n        return this.getAttribute('slimset');\n    }\n\n    set slimset(slimset) {\n        if (slimset) {\n            this.setAttribute('slimset', slimset);\n        }\n    }\n\n    get accession() {\n        return this.getAttribute('accession');\n    }\n\n    loadData() {\n        console.log('loading...')\n        this.getAnnotationTerms(this.accession).then(stream => {\n            stream.json().then(d => {\n                this.annotationTerms = d.dbReferences.filter(d => d.type === 'GO');\n                let goIds = this.annotationTerms.filter(d => d.type === 'GO').map(d => d.id);\n                this.getSlimSet().then(stream => {\n                    stream.json().then(d => {\n                        const slimIds = d.goSlimSets.filter(f => f.name === this.slimset)[0].associations.map(term => term.id);\n                        // remove root nodes\n                        for (const rootNode of this.goRootNodes) {\n                            slimIds.splice(slimIds.indexOf(rootNode), 1);\n                        }\n                        this.getTermGraph(goIds, slimIds).then(d => d.json().then(graph => {\n                            const tree = this.buildTree(graph.results[0].vertices, graph.results[0].edges);\n                            const ul = document.createElement('ul');\n                            this.traverseTree(tree, ul);\n                            this.appendChild(ul);\n                            console.log('Loaded')\n                        }));\n                    });\n                })\n            });\n        });\n    }\n\n    getAnnotationTerms(accession) {\n        const headers = new Headers({\n            'Accept': 'application/json'\n        });\n        const init = {\n            method: 'GET',\n            headers: headers,\n            mode: 'cors',\n            cached: 'default'\n        }\n        return fetch(`https://www.ebi.ac.uk/proteins/api/proteins/${accession}`, init);\n    }\n\n    getSlimSet() {\n        return fetch('https://www.ebi.ac.uk/QuickGO/services/internal/presets?fields=goSlimSets');\n    }\n\n    getTermGraph(goIds, slimIds) {\n        return fetch(`https://wwwdev.ebi.ac.uk/QuickGO/services/ontology/go/terms/graph?startIds=${goIds}&stopIds=${slimIds}&relations=is_a`);\n    }\n\n    buildTree(nodes, edges) {\n        // Initialise node array\n        nodes.map(n => n.children = []);\n        let rootNodes = nodes.map(n => n.id);\n        for (const edge of edges) {\n            let parent = nodes.filter(node => node.id === edge.object)[0];\n            let child = nodes.filter(node => node.id === edge.subject)[0];\n            if (rootNodes.indexOf(child.id) >= 0) {\n                rootNodes.splice(rootNodes.indexOf(child.id), 1);\n            }\n            parent.children.push(child);\n        }\n        // Return root nodes\n        return nodes.filter(node => {\n            for (const rootNode of rootNodes) {\n                if (node.id === rootNode) {\n                    return true;\n                }\n            }\n            return false;\n        })\n    }\n\n    traverseTree(children, el) {\n        for (const node of children) {\n            const div = document.createElement('div');\n            const li = document.createElement('li');\n            const a = document.createElement('a');\n            a.setAttribute('href', `http://www.ebi.ac.uk/QuickGO-Beta/term/${node.id}`);\n            a.textContent = node.id;\n            const span = document.createElement('span');\n            let annotationNode = this.annotationTerms.find(d => d.id === node.id);\n            span.style.fontWeight = annotationNode ? 'bold' : 'normal';\n            span.textContent = node.label;\n            div.appendChild(a);\n            div.appendChild(span);\n            li.appendChild(div);\n            if (annotationNode) {\n                div.appendChild(this.getRenderSource(annotationNode.properties));\n            }\n            el.appendChild(li);\n            if (node.children && node.children.length > 0) {\n                div.addEventListener('click', this.nodeClick);\n                li.classList.add('branch');\n                const ul = document.createElement('ul');\n                ul.style.marginLeft = '1em';\n                li.appendChild(ul);\n                this.traverseTree(node.children, ul);\n            }\n        }\n    }\n\n    nodeClick() {\n        this.parentElement.classList.toggle('open');\n    }\n\n    getRenderSource(source) {\n        const span = document.createElement('span');\n        span.classList.add('evidence-tag');\n        span.textContent = source.source;\n        return span;\n    }\n\n    expandAll() {\n        for (const li of this.querySelectorAll('.branch')) {\n            li.classList.add('open');\n        }\n    }\n\n    collapseAll() {\n        for (const li of this.querySelectorAll('.open')) {\n            li.classList.remove('open');\n        }\n    }\n}\n\ncustomElements.define('go-vis', GoVis);\n\nexport default GoVis;"],"names":["GoVis","annotationTerms","goRootNodes","accession","loadData","attrName","oldVal","newVal","innerHTML","log","getAnnotationTerms","then","json","d","dbReferences","filter","type","goIds","map","id","getSlimSet","slimIds","goSlimSets","f","name","slimset","associations","term","rootNode","splice","indexOf","getTermGraph","tree","buildTree","graph","results","vertices","edges","ul","document","createElement","traverseTree","appendChild","headers","Headers","init","fetch","nodes","n","children","rootNodes","edge","parent","node","object","child","subject","push","el","div","li","a","setAttribute","textContent","span","annotationNode","find","style","fontWeight","label","getRenderSource","properties","length","addEventListener","nodeClick","classList","add","marginLeft","parentElement","toggle","source","querySelectorAll","remove","acc","getAttribute","customElements","define"],"mappings":"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"}