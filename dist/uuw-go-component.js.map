{"version":3,"file":"uuw-go-component.js","sources":["../src/main.js"],"sourcesContent":["import './govis.scss';\n\nclass UuwGoComponent extends HTMLElement {\n    constructor() {\n        super();\n        this.annotationTerms = [];\n        this.goRootNodes = ['GO:0008150', 'GO:0003674', 'GO:0005575'];\n        this.accession = '';\n    }\n\n    connectedCallback() {\n        this.loadData();\n    }\n\n    attributeChangedCallback(attrName, oldVal, newVal) {\n        if (oldVal !== null) {\n            this.innerHTML = ''; //this should be avoided\n            this.loadData();\n        }\n    }\n\n    static get observedAttributes() {\n        return ['accession', 'slimset'];\n    }\n\n    set accession(acc) {\n        if (acc) {\n            this.setAttribute('accession', acc);\n        }\n    }\n\n    get slimset() {\n        return this.getAttribute('slimset');\n    }\n\n    set slimset(slimset) {\n        if (slimset) {\n            this.setAttribute('slimset', slimset);\n        }\n    }\n\n    get accession() {\n        return this.getAttribute('accession');\n    }\n\n    loadData() {\n        console.log('loading...')\n        this\n            .getAnnotationTerms(this.accession)\n            .then(stream => {\n                stream\n                    .json()\n                    .then(d => {\n                        this.annotationTerms = d\n                            .dbReferences\n                            .filter(d => d.type === 'GO');\n                        let goIds = this\n                            .annotationTerms\n                            .filter(d => d.type === 'GO')\n                            .map(d => d.id);\n                        this\n                            .getSlimSet()\n                            .then(stream => {\n                                stream\n                                    .json()\n                                    .then(d => {\n                                        const slimIds = d\n                                            .goSlimSets\n                                            .filter(f => f.name === this.slimset)[0]\n                                            .associations\n                                            .map(term => term.id);\n                                        // remove root nodes\n                                        for (const rootNode of this.goRootNodes) {\n                                            slimIds.splice(slimIds.indexOf(rootNode), 1);\n                                        }\n                                        this\n                                            .getTermGraph(goIds, slimIds)\n                                            .then(d => d.json().then(graph => {\n                                                const tree = this.buildTree(graph.results[0].vertices, graph.results[0].edges);\n                                                const ul = document.createElement('ul');\n                                                this.renderSlimsTree(tree, ul);\n                                                this.appendChild(ul);\n                                                console.log('Loaded')\n                                            }));\n                                    });\n                            })\n                    });\n            });\n    }\n\n    getAnnotationTerms(accession) {\n        const headers = new Headers({'Accept': 'application/json'});\n        const init = {\n            method: 'GET',\n            headers: headers,\n            mode: 'cors',\n            cached: 'default'\n        }\n        return fetch(`https://www.ebi.ac.uk/proteins/api/proteins/${accession}`, init);\n    }\n\n    getSlimSet() {\n        return fetch('https://www.ebi.ac.uk/QuickGO/services/internal/presets?fields=goSlimSets');\n    }\n\n    getTermGraph(goIds, slimIds) {\n        return fetch(`https://wwwdev.ebi.ac.uk/QuickGO/services/ontology/go/terms/graph?startIds=${goIds}&stopIds=${slimIds}&relations=is_a`);\n    }\n\n    buildTree(nodes, edges) {\n        // Initialise node array\n        nodes.map(n => n.children = []);\n        let rootNodes = nodes.map(n => n.id);\n        for (const edge of edges) {\n            let parent = nodes.filter(node => node.id === edge.object)[0];\n            let child = nodes.filter(node => node.id === edge.subject)[0];\n            // check for bug in backend\n            if (!parent || !child) {\n                continue;\n            }\n            if (rootNodes.indexOf(child.id) >= 0) {\n                rootNodes.splice(rootNodes.indexOf(child.id), 1);\n            }\n            parent\n                .children\n                .push(child);\n        }\n        // Return root nodes\n        return nodes.filter(node => {\n            for (const rootNode of rootNodes) {\n                if (node.id === rootNode) {\n                    return true;\n                }\n            }\n            return false;\n        })\n    }\n\n    renderGoTerm(node) {\n        const div = document.createElement('div');\n        const li = document.createElement('li');\n        const a = document.createElement('a');\n        a.setAttribute('href', `http://www.ebi.ac.uk/QuickGO-Beta/term/${node.id}`);\n        a.textContent = node.id;\n        const span = document.createElement('span');\n        let annotationNode = this\n            .annotationTerms\n            .find(d => d.id === node.id);\n        span.style.fontWeight = annotationNode\n            ? 'bold'\n            : 'normal';\n        span.textContent = node.label;\n        div.appendChild(a);\n        div.appendChild(span);\n        li.appendChild(div);\n        if (annotationNode) {\n            div.appendChild(this.getRenderSource(annotationNode));\n        }\n        if (node.children && node.children.length > 0) {\n            div.addEventListener('click', this.nodeClick);\n            li\n                .classList\n                .add('branch');\n        }\n        return li;\n    }\n\n    renderSlimsTree(children, el) {\n        for (const node of children) {\n            if (this.goRootNodes.includes(node.id)) {\n                continue;\n            }\n            const li = this.renderGoTerm(node);\n            el.appendChild(li);\n            if (node.children && node.children.length > 0) {\n                const endNodes = this.traverseTree(node.children);\n                const ul = document.createElement('ul');\n                ul.style.marginLeft = '1em';\n                for (const endNode of endNodes) {\n                    const endLi = this.renderGoTerm(endNode);\n                    ul.appendChild(endLi);\n                }\n                li.appendChild(ul);\n            }\n        }\n    }\n\n    traverseTree(children, endNodes = new Set()) {\n        for (const node of children) {\n            if (node.children && node.children.length > 0) {\n                this.traverseTree(node.children, endNodes)\n            } else {\n                endNodes.add(node);\n            }\n        }\n        return endNodes;\n    }\n\n    nodeClick() {\n        this\n            .parentElement\n            .classList\n            .toggle('open');\n    }\n\n    getRenderSource(source) {\n        const span = document.createElement('span');\n        span\n            .classList\n            .add('evidence-tag');\n        span.textContent = source.properties.source;\n        if (source.evidences) {\n            let evidences = '';\n            for (const evidence of source.evidences) {\n                evidences = `${evidences} ${evidence.source.name}:${evidence.source.id}`;\n            }\n            span.title = evidences;\n        }\n        return span;\n    }\n\n    expandAll() {\n        for (const li of this.querySelectorAll('.branch')) {\n            li\n                .classList\n                .add('open');\n        }\n    }\n\n    collapseAll() {\n        for (const li of this.querySelectorAll('.open')) {\n            li\n                .classList\n                .remove('open');\n        }\n    }\n}\n\ncustomElements.define('uuw-go-component', UuwGoComponent);\n\nexport default UuwGoComponent;"],"names":["UuwGoComponent","annotationTerms","goRootNodes","accession","loadData","attrName","oldVal","newVal","innerHTML","log","getAnnotationTerms","then","json","d","dbReferences","filter","type","goIds","map","id","getSlimSet","slimIds","goSlimSets","f","name","slimset","associations","term","rootNode","splice","indexOf","getTermGraph","tree","buildTree","graph","results","vertices","edges","ul","document","createElement","renderSlimsTree","appendChild","headers","Headers","init","fetch","nodes","n","children","rootNodes","edge","parent","node","object","child","subject","push","div","li","a","setAttribute","textContent","span","annotationNode","find","style","fontWeight","label","getRenderSource","length","addEventListener","nodeClick","classList","add","el","includes","renderGoTerm","endNodes","traverseTree","marginLeft","endNode","endLi","Set","parentElement","toggle","source","properties","evidences","evidence","title","querySelectorAll","remove","acc","getAttribute","HTMLElement","customElements","define"],"mappings":"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"}